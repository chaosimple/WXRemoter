#!wing
#!version=5.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.breakpoints = {loc('main.py'): {136: (0,
        None,
        1,
        0),
                                      170: (0,
        None,
        1,
        0)}}
debug.show-args-dialog = {loc('main.py'): False}
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'Ez5xc1HreXwvFwZZVgnIgqVReX'\
        'dn0lMt',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [3,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.1945117029862793,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [(1,)],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../D:/Anaconda2/Lib/logging/__init__.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../D:/Anaconda2/Lib/logging/__init__.py'),
                      'addLevelName')]},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/algFile'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/algFile'),
                      'calc_')]},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/algcluster'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/algcluster'),
                      'calc')]},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/class'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/class.ctx/def'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/def'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/file'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/ltalg'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/ltalg'),
                      'calc')]},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/module.ctx/class'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/module.ctx/def'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/stalg'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../Library/Application Support/Wing IDE/v5/snippets/py/stalg'),
                      'calc')]},
        loc('../OADetection/MLOAD/main.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../OADetection/MLOAD/main.py'),
                             'gen_doc')]],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/main.py'),
                      'calculate')]},
        loc('../OADetection/MLOAD/mload/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../OADetection/MLOAD/mload/algorithmBase/ODAlgBase.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/algorithmBase/ODAlgBase.py'),
                      'algorithmBase')]},
        loc('../OADetection/MLOAD/mload/algorithmBase/scoreOutlierDetectionAlgBase.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/algorithmBase/scoreOutlierDetectionAlgBase.py'),
                      'scoreOutlierDetectionAlgBase')]},
        loc('../OADetection/MLOAD/mload/base/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/base/base.py'),
                      '')]},
        loc('../OADetection/MLOAD/mload/base/base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/base/base.py'),
                      'BaseAlgorithm')]},
        loc('../OADetection/MLOAD/mload/base/base_oad_alg.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/base/base_oad_alg.py'),
                      'BaseLabelTypeODAlgorithm')]},
        loc('../OADetection/MLOAD/mload/base/bases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/base/bases.py'),
                      'BaseAlgorithm')]},
        loc('../OADetection/MLOAD/mload/base/cluster_base'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../OADetection/MLOAD/mload/base/cluster_base.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/base/cluster_base.py'),
                      'BaseCluster')]},
        loc('../OADetection/MLOAD/mload/base/mixin.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/base/mixin.py'),
                      'ParallelRunMixin')]},
        loc('../OADetection/MLOAD/mload/base/oad_base.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/base/oad_base.py'),
                      'BaseLabelTypeOAD')]},
        loc('../OADetection/MLOAD/mload/baseAlgorithms/__init__.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../OADetection/MLOAD/mload/bases.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../OADetection/MLOAD/mload/cluster/DP_Cluster.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/cluster/DP_Cluster.py'),
                      'DP_Cluster')]},
        loc('../OADetection/MLOAD/mload/cluster/__init__.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/cluster/dbscan.py'),
                      '')]},
        loc('../OADetection/MLOAD/mload/cluster/dbscan.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/cluster/dbscan.py'),
                      'DBSCAN')]},
        loc('../OADetection/MLOAD/mload/cluster/dp.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/cluster/dp.py'),
                      'DPCluster')]},
        loc('../OADetection/MLOAD/mload/cluster/kmeans.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/cluster/kmeans.py'),
                      'KMeans')]},
        loc('../OADetection/MLOAD/mload/cluster/kmedoids.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/cluster/kmedoids.py'),
                      'KMedoids')]},
        loc('../OADetection/MLOAD/mload/config.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/config.py'),
                      'MAC_BASE_DIR')]},
        loc('../OADetection/MLOAD/mload/dataset/__init__.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/dataset/cluster_dataset.py'),
                      '')]},
        loc('../OADetection/MLOAD/mload/dataset/cluster_dataset.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/dataset/cluster_dataset.py'),
                      'ClusterDataset')]},
        loc('../OADetection/MLOAD/mload/dataset/dataset_base.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/dataset/dataset_base.py'),
                      'BaseDataset')]},
        loc('../OADetection/MLOAD/mload/dataset/example_dataset.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../OADetection/MLOAD/mload/dataset/example_dataset.py'),
                             'Dataset')]],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/dataset/example_dataset.py'),
                      'Dataset')]},
        loc('../OADetection/MLOAD/mload/dataset/oa_dataset.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/dataset/oa_dataset.py'),
                      'ID_COLUMN_NAME')]},
        loc('../OADetection/MLOAD/mload/example/LDF_EXEMPLE.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/example/LDF_EXEMPLE.py'),
                      'LDF')]},
        loc('../OADetection/MLOAD/mload/example/exp_ldf.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/example/exp_ldf.py'),
                      'LDF')]},
        loc('../OADetection/MLOAD/mload/example/exp_lof.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/example/exp_lof.py'),
                      'LOF')]},
        loc('../OADetection/MLOAD/mload/example/template.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/example/template.py'),
                      'TemplateLTAlgorithm')]},
        loc('../OADetection/MLOAD/mload/example/testLOF.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../OADetection/MLOAD/mload/externals/__init__.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../OADetection/MLOAD/mload/externals/joblib/_parallel_backends.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/externals/joblib/_parallel_backends.py'),
                      'AutoBatchingMixin')]},
        loc('../OADetection/MLOAD/mload/externals/joblib/externals/loky/_base.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/externals/joblib/externals/loky/_base.py'),
                      'ALL_COMPLETED')]},
        loc('../OADetection/MLOAD/mload/externals/joblib/parallel.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/externals/joblib/parallel.py'),
                      'BACKENDS')]},
        loc('../OADetection/MLOAD/mload/oa_detect/NLOD.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/oa_detect/NLOD.py'),
                      'NLOD')]},
        loc('../OADetection/MLOAD/mload/oa_detect/density/inflo.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/oa_detect/density/inflo.py'),
                      'INFLO')]},
        loc('../OADetection/MLOAD/mload/oa_detect/density/loci.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/oa_detect/density/loci.py'),
                      'LOCI')]},
        loc('../OADetection/MLOAD/mload/oa_detect/density/simplified_lof.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/oa_detect/density/simplified_lof.py'),
                      'SimplifiedLOF')]},
        loc('../OADetection/MLOAD/mload/oa_detect/density_based/LOCI.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../OADetection/MLOAD/mload/oa_detect/density_based/LOCI.py'),
                             'LOCI')]],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/oa_detect/density_based/LOCI.py'),
                      'LOCI')]},
        loc('../OADetection/MLOAD/mload/oa_detect/density_based/LOF.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../OADetection/MLOAD/mload/oa_detect/density_based/LOF.py'),
                             'LOF')]],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/oa_detect/density_based/LOF.py'),
                      'LOF')]},
        loc('../OADetection/MLOAD/mload/oa_detect/density_based/SimplifiedLOF.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../OADetection/MLOAD/mload/oa_detect/density_based/ldf.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../OADetection/MLOAD/mload/oa_detect/density_based/ldf.py'),
                             'LDF')]],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/oa_detect/density_based/ldf.py'),
                      'LDF')]},
        loc('../OADetection/MLOAD/mload/oa_detect/markov/chaos.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/oa_detect/markov/chaos.py'),
                      'calc_dominant_eigenvector')]},
        loc('../OADetection/MLOAD/mload/oa_detect/markov/hcod.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/oa_detect/markov/hcod.py'),
                      'HCOD')]},
        loc('../OADetection/MLOAD/mload/oa_detect/markov/outrank.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/oa_detect/markov/outrank.py'),
                      'calc_stationary_distribution_by_transition_mat')]},
        loc('../OADetection/MLOAD/mload/outlierdetection/NLOD.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/outlierdetection/NLOD.py'),
                      'NLOD')]},
        loc('../OADetection/MLOAD/mload/outlierdetection/density_based/LDF.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../OADetection/MLOAD/mload/outlierdetection/density_based/LDF.py'),
                             'calc_LDF_Score')]],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/outlierdetection/density_based/LDF.py'),
                      'calc_LDF_Score')]},
        loc('../OADetection/MLOAD/mload/outlierdetection/markov/OutRank.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/outlierdetection/markov/OutRank.py'),
                      'calcOutRank_A_Score_byDataset')]},
        loc('../OADetection/MLOAD/mload/result/__init__.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/result/parallel.py'),
                      '')]},
        loc('../OADetection/MLOAD/mload/result/parallel.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/result/parallel.py'),
                      'ParallelRun')]},
        loc('../OADetection/MLOAD/mload/result/result_db.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/result/result_db.py'),
                      'logger')]},
        loc('../OADetection/MLOAD/mload/result/result_evaluation.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/result/result_evaluation.py'),
                      'Evaluation')]},
        loc('../OADetection/MLOAD/mload/result/result_model.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/result/result_model.py'),
                      'Base')]},
        loc('../OADetection/MLOAD/mload/result/transformer.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/result/transformer.py'),
                      'Transformer')]},
        loc('../OADetection/MLOAD/mload/result/visual.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../OADetection/MLOAD/mload/result/visual.py'),
                             'list_color_names')]],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/result/visual.py'),
                      'DPI')]},
        loc('../OADetection/MLOAD/mload/utilities/AlgorithmResult.py'): {'ex'\
        'panded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../OADetection/MLOAD/mload/utilities/AlgorithmResult.py'),
                             'algFuncWrapper')]],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/utilities/AlgorithmResult.py'),
                      'algFuncWrapper')]},
        loc('../OADetection/MLOAD/mload/utilities/DatasetUtils.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/utilities/DatasetUtils.py'),
                      'dataName')]},
        loc('../OADetection/MLOAD/mload/utilities/Utils.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/utilities/Utils.py'),
                      'axisLabelFont')]},
        loc('../OADetection/MLOAD/mload/utilities/Visualization.py'): {'expa'\
        'nded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/utilities/Visualization.py'),
                      'dataName')]},
        loc('../OADetection/MLOAD/mload/utilities/config.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [[('generic attribute',
                             loc('../OADetection/MLOAD/mload/utilities/config.py'),
                             'WIN_SQL_FILE_PATH')]],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/utilities/config.py'),
                      'Config')]},
        loc('../OADetection/MLOAD/mload/utilities/logging_conf.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/utilities/logging_conf.py'),
                      'basic_fmt')]},
        loc('../OADetection/MLOAD/mload/utilities/metric.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/utilities/metric.py'),
                      'calc_distance_matrix')]},
        loc('../OADetection/MLOAD/mload/utilities/metrics.py'): {'expanded-n'\
        'odes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/utilities/metrics.py'),
                      'calc_distance_matrix')]},
        loc('../OADetection/MLOAD/mload/utilities/parallel.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../OADetection/MLOAD/mload/utilities/result_evaluation.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/utilities/result_evaluation.py'),
                      'Evaluation')]},
        loc('../OADetection/MLOAD/mload/utilities/transformer.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../OADetection/MLOAD/mload/utils/config.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/utils/config.py'),
                      'Config')]},
        loc('../OADetection/MLOAD/mload/utils/utils.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../OADetection/MLOAD/mload/utils/utils.py'),
                      'logger')]},
        loc('../OADetection/MLOAD/mload/visual/basic.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/MLOAD/mload/visual/basic.py'),
                      'BasicVisual')]},
        loc('../OADetection/MLOAD/mload/visual/paper_visual/LGRWOD.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../OADetection/MLOAD/mload/visual/paper_visual/LGRWOD.py'),
                      'circarrow')]},
        loc('../OADetection/MLOAD/setup.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../OADetection/example_dataset.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../OADetection/example_dataset.py'),
                      'Bunch')]},
        loc('../OADetection/mlod/setup.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../anaconda/lib/python2.7/contextlib.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../anaconda/lib/python2.7/contextlib.py'),
                      'closing')]},
        loc('../../../anaconda/lib/python2.7/copy_reg.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/copy_reg.py'),
                      'add_extension')]},
        loc('../../../anaconda/lib/python2.7/posixpath.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/posixpath.py'),
                      'abspath')]},
        loc('../../../anaconda/lib/python2.7/site-packages/numpy/core/_methods.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../anaconda/lib/python2.7/site-packages/numpy/core/_methods.py'),
                      'umr_all')]},
        loc('../../../anaconda/lib/python2.7/site-packages/numpy/core/numeric.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/site-packages/numpy/core/numeric.py'),
                      'allclose')]},
        loc('../../../anaconda/lib/python2.7/site-packages/pandas/io/parsers.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/site-packages/pandas/io/parsers.py'),
                      'count_empty_vals')]},
        loc('../../../anaconda/lib/python2.7/site-packages/scipy/spatial/distance.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/site-packages/scipy/spatial/distance.py'),
                      'braycurtis')]},
        loc('../../../anaconda/lib/python2.7/site-packages/sklearn/datasets/base.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/site-packages/sklearn/datasets/base.py'),
                      'clear_data_home')]},
        loc('../../../anaconda/lib/python2.7/site-packages/sklearn/metrics/classification.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/site-packages/sklearn/metrics/classification.py'),
                      'accuracy_score')]},
        loc('../../../anaconda/lib/python2.7/site-packages/sklearn/metrics/pairwise.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/site-packages/sklearn/metrics/pairwise.py'),
                      'additive_chi2_kernel')]},
        loc('../../../anaconda/lib/python2.7/site-packages/sklearn/metrics/ranking.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/site-packages/sklearn/metrics/ranking.py'),
                      'auc')]},
        loc('../../../anaconda/lib/python2.7/site-packages/sklearn/utils/__init__.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../anaconda/lib/python2.7/site-packages/sklearn/utils/arpack.py'),
                      '')]},
        loc('../../../anaconda/lib/python2.7/site-packages/sklearn/utils/validation.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/site-packages/sklearn/utils/validation.py'),
                      'assert_all_finite')]},
        loc('../../../anaconda/lib/python2.7/site-packages/sqlalchemy/engine/default.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../anaconda/lib/python2.7/site-packages/sqlalchemy/engine/default.py'),
                      'AUTOCOMMIT_REGEXP')]},
        loc('../../../anaconda/lib/python2.7/site-packages/sqlalchemy/orm/query.py'): {''\
        'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../anaconda/lib/python2.7/site-packages/sqlalchemy/orm/query.py'),
                      'AliasOption')]},
        loc('../../../anaconda/lib/python2.7/subprocess.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../anaconda/lib/python2.7/subprocess.py'),
                      'call')]},
        loc('unknown:<untitled> #2'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': [('class def',
        loc('unknown:<untitled> #1'),
        'LOF')]},
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None},
        loc('unknown:<untitled> #4'): {'expanded-nodes': [],
                                       'selected-nodes': [],
                                       'top-node': None}},
                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('snippets',
                               'tall',
                               0,
                               {'tree-states': {'__all__': [],
        u'c': [],
        u'django': [],
        u'html': [],
        u'py': [(u'file',
                 u'all',
                 u'')]}}),
                              ('refactoring',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.4037900874635568,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'',
                                       'fReverse': False,
                                       'fSearchText': u'os.path.exists',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': u'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'vbase',
                                       'fReverse': False,
                                       'fSearchText': u'__arti',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha'}),
                     ('uses',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'sel-line': 2,
                       'sel-line-start': 25,
                       'selection_end': 25,
                       'selection_start': 25}),
                     ('debug-probe',
                      'wide',
                      1,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 71,
                       'folded-linenos': [],
                       'history': {u'file:/Users/chao/Python Codes/Github/OADetection/MLOAD/main.py': [''\
        'all_data.extend(in_data)\n',
        'all_data.extend(ou_data)\n',
        'len(all_data)\n',
        'VIS.draw_scatter_by_array(all_data, arr_highlight_index = [-50:])\n',
        'VIS.draw_scatter_by_array(all_data, arr_highlight_index = np.arange'\
        '(0, 500)[-50:])\n',
        'VIS.draw_scatter_by_array(all_data[:, 0],all_data[:, 1], arr_highli'\
        'ght_index = np.arange(0, 500)[-50:])\n',
        'VIS.draw_scatter_by_array(all_data[:, 0],all_data[:, 1], arr_highli'\
        'ght_index = np.arange(450, 500))\n',
        'np.arange(5, 10)\n',
        "Utils.save_obj_tmp(all_data, 'd1')\n",
        'd1\n',
        't = np.array(d1)\n',
        'normal[0]\n',
        't = np.array(normal).T\n',
        'type(t)\n',
        's = np.array([[0, 0], [1, 1]])\n',
        't + s\n',
        'np.append(t, s)\n',
        'np.append(t, s, axis = 0)\n',
        'd = np.append(t, s, axis = 0)\n',
        'type(d)\n',
        'd = np.append(np.array(normal).T, np.array(abnormal).T, axis = 0)\n',
        'd.shape\n',
        'len(outlier)\n',
        '- 1 * len(outlier)\n',
        'outlier_index\n',
        "ds.data_name = 't2'\n",
        "Utils.save_obj_tmp(ds, 'd1')\n",
        "name = 'd{}'.format(j - 1)\n",
        'name\n',
        'ds.data_mat\n',
        'fig_name\n',
        't = ds.df_data\n',
        "t.to_csv('/Users/chao/Downloads/tmp/1.csv')\n",
        'ds0 = OADataset.load(OADataset.DataName.LX_CIRCLES)\n',
        'ds0\n',
        'ds\n',
        'ds == ds0\n',
        'ds = OADataset.load(OADataset.DataName.LX_CIRCLES)\n',
        'len(list_rm)\n',
        'list_rm\n',
        'for rm in list_rm:\n    print rm\n\n',
        "t = list_rm['rm']\n",
        't\n',
        'len(t)\n',
        't[0]\n',
        'list_result\n',
        'for l in list_result:\n    print l\n\n',
        "msg = ''\n",
        "for list_alg in list_result:\n    for alg in list_alg:\n        msg"\
        " += '{:.2f}'.format(alg)\n    msg += '\\n'\n\n",
        "msg = ''\nfor list_alg in list_result:\n    for alg in list_alg:\n "\
        "       msg += '{:.2f} & '.format(alg)\n    msg += '\\n'\n\n",
        'msg[:-2]\n',
        "msg = ''\nfor list_alg in list_result:\n    for alg in list_alg:\n "\
        "       msg += '{:.3f} & '.format(alg)\n    msg = msg[:-2]\n    msg "\
        "+= '\\n'\n\n",
        'msg\n',
        "msg = ''\nfor i, list_alg in enumerate(list_result):\n    for alg i"\
        "n list_alg:\n        msg += '{:.3f} & '.format(alg)\n    msg = msg["\
        ":-2]\n    msg += '\\n'\n\n",
        "msg = ''\nfor i, list_alg in enumerate(list_result):\n    msg += '{"\
        "} &'.format(list_alg_name[i])\n    for alg in list_alg:\n        ms"\
        "g += '{:.3f} & '.format(alg)\n    msg = msg[:-2]\n    msg += '\\n'\n"\
        "\n",
        "msg = ''\nfor i, list_alg in enumerate(list_result):\n    msg += '{"\
        "} &'.format(list_data_name[i])\n    for alg in list_alg:\n        m"\
        "sg += '{:.3f} & '.format(alg)\n    msg = msg[:-2]\n    msg += '\\n'"\
        "\n\n",
        "msg = ''\nfor i, list_alg in enumerate(list_result):\n    msg += '{"\
        "} &'.format(list_data_name[i])\n    for alg in list_alg:\n        m"\
        "sg += '{:.3f} & '.format(alg)\n    msg = msg[:-2]\n    msg += '\\\\"\
        "\\\\ \\n'\n\n",
        'list_alg\n',
        'np.max(list_alg)\n',
        "msg = ''\nfor i, list_alg in enumerate(list_result):\n    msg += '{"\
        "} &'.format(list_data_name[i])\n    for alg in list_alg:\n        i"\
        "f alg == np.max(list_alg):\n            msg += '\\bfseries {:.3f} &"\
        " '.format(alg)\n        else:\n            msg += '{:.3f} & '.forma"\
        "t(alg)\n    msg = msg[:-2]\n    msg += '\\\\\\\\ \\n'\n\n",
        "msg = ''\nfor i, list_alg in enumerate(list_result):\n    msg += '{"\
        "} & '.format(list_data_name[i])\n    for alg in list_alg:\n        "\
        "if alg == np.max(list_alg):\n            msg += '\\\\bfseries {:.3f"\
        "} & '.format(alg)\n        else:\n            msg += '{:.3f} & '.fo"\
        "rmat(alg)\n    msg = msg[:-2]\n    msg += '\\\\\\\\ \\n'\n\n",
        'print msg\n',
        'ds = OADataset.load(OADataset.DataName.IONOSPHERE)\n',
        'print ds\n',
        'ds.feature_names\n',
        'l\n',
        'l()\n',
        'self.get_used_dataset_name()\n',
        'print self.get_used_dataset_name\n',
        'db_name\n',
        's = rdb.search_eval_stats(CHAOS().alg_name, data_name)\n',
        's\n',
        "s['auc']\n",
        "s['auc']['max_auc']\n",
        "s['auc']['max_auc_param']\n",
        "devl = rdb.search_eval_list(CHAOS(k= 35).alg_name, data_name, dict_"\
        "alg_param= {'k': 35,})\n",
        'type(devl)\n',
        'devl\n',
        'devl.keys()\n',
        "devl['auc']\n",
        "devl['precision']\n",
        "devl['rm']\n",
        "devl['rm'][0].create_time\n",
        "devl['rm'][0].dataset.dataset_object\n",
        "devl['rm'][0].evl_object.classification_report\n",
        "print devl['rm'][0].evl_object.classification_report\n",
        's.keys()\n',
        "print devl['rm'][0].evl_object.recall_score\n",
        "s['max_f1_score']\n",
        "s['f1_score']\n",
        "s['f1_score']['max_f1_score']\n",
        "s['f1_score']['max_f1_score_param']\n",
        "devl = rdb.search_eval_list(CHAOS().alg_name, data_name, dict_alg_p"\
        "aram= {'k': 63,})\n",
        "print devl['rm'][0].evl_object\n",
        "dstat['recall']\n",
        "dstat['recall']['max_recall']\n",
        "dstat['recall']['max_recall_param']\n",
        'dstat.keys()\n',
        "dstat['auc'].keys()\n",
        'print rdb.get_db_info_string()\n'],
                                   u'file:/Users/chao/Python Codes/Github/WXRemoter/main.py': [''\
        'print to_user_name\n',
        "msg['Text']\n",
        "print msg['Text']\n",
        ' msg.isAt\n',
        'msg.actualNickName\n',
        'print msg.actualNickName\n',
        'print msg.text\n',
        'type(groups)\n',
        'len(groups)\n',
        'g\n',
        'g.keys()\n',
        'print g.displayName\n',
        "print g['DisplayName']\n",
        "print g['MemberList']\n",
        "print g['PYQuanPin']\n",
        "print g['UserName']\n",
        "t = itchat.search_chatrooms(g['UserName'])\n",
        't[0]\n',
        "t = itchat.search_chatrooms(userName = g['UserName'])\n",
        "t['RemarkName']\n",
        "t['NickName']\n",
        "print t['NickName']\n",
        'f = msg.fromUserName\n',
        'f\n',
        'print get_user_name(f)\n',
        "msg['FromUserName']\n",
        "itchat.search_chatrooms(userName= msg['FromUserName'])\n",
        "t = itchat.search_chatrooms(userName= msg['FromUserName'])\n",
        't\n',
        'type(t)\n',
        "str_msg = u'@%s\\u2005%s' % (msg['ActualNickName'], u'\xe6\x94\xb6\xe5"\
        "\x88\xb0\xef\xbc\x9a' + msg['Text'])\n",
        'print str_msg\n'],
                                   u'file:/Users/chao/Python Codes/Wechat/test.py': [''\
        'ichat\n',
        "r = itchat.send_file('aaa.png', 'filehelper')\n",
        'r\n',
        'type(r)\n',
        "itchat.send('@img@aaa.png')\n",
        "itchat.send('@img@aaa.png', 'filehelper')\n",
        "msg['FromUserName']\n",
        'msg.keys\n',
        "t = msg['FromUserName']\n",
        't\n',
        "msg['TEXT']\n",
        'msg\n',
        'msg.keys()\n',
        "msg['Text']\n",
        "print msg['Text']\n",
        "print msg['Text'][0]\n",
        "u = msg['FromUserName']\n",
        "itchat.send('hahaha', u)\n"]},
                       'launch-id': None,
                       'sel-line': 76,
                       'sel-line-start': 6345,
                       'selection_end': 6397,
                       'selection_start': 6384}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 3,
                       'sel-line-start': 201,
                       'selection_end': 201,
                       'selection_start': 201}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': 'cmd-yhBIBwMJYhYYNTxN'})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../OADetection/MLOAD/mload/dataset/oa_dataset_config.py'),
        {'attrib-starts': [],
         'first-line': 229,
         'folded-linenos': [],
         'sel-line': 19,
         'sel-line-start': 792,
         'selection_end': 800,
         'selection_start': 800},
        1530355701.607639],
        [loc('../OADetection/MLOAD/mload/utils/config.py'),
         {'attrib-starts': [('Config',
                             36),
                            ('Config.get_abs_platform_file_path',
                             155)],
          'first-line': 136,
          'folded-linenos': [],
          'sel-line': 155,
          'sel-line-start': 5521,
          'selection_end': 5555,
          'selection_start': 5529},
         1530355701.674592],
        [loc('../OADetection/MLOAD/mload/visual/base.py'),
         {'attrib-starts': [('BaseVisual',
                             51),
                            ('BaseVisual.vbase_show_save_fig',
                             450)],
          'first-line': 467,
          'folded-linenos': [],
          'sel-line': 486,
          'sel-line-start': 18446,
          'selection_end': 18446,
          'selection_start': 18446},
         1530355701.695083],
        [loc('../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       27],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0}},
         1530355702.206816],
        [loc('../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         {'displayed-index': 27,
          'viewer-state': {'history': [-1,
                                       27],
                           'history-pos': 1,
                           'index': 27,
                           'top': 0}},
         1530355759.465469],
        [loc('../../Wechat/test.py'),
         {'attrib-starts': [],
          'first-line': 0,
          'folded-linenos': [],
          'sel-line': 0,
          'sel-line-start': 0,
          'selection_end': 0,
          'selection_start': 0},
         1530355805.509038],
        [loc('../../Wechat/test.py'),
         {'attrib-starts': [],
          'first-line': 15,
          'folded-linenos': [],
          'sel-line': 27,
          'sel-line-start': 316,
          'selection_end': 316,
          'selection_start': 316},
         1530355940.686925],
        [loc('../OADetection/MLOAD/main.py'),
         {'attrib-starts': [],
          'first-line': 556,
          'folded-linenos': [],
          'sel-line': 567,
          'sel-line-start': 20349,
          'selection_end': 20375,
          'selection_start': 20349},
         1530355953.051421],
        [loc('../../Wechat/test.py'),
         {'attrib-starts': [('tuling',
                             31)],
          'first-line': 28,
          'folded-linenos': [],
          'sel-line': 32,
          'sel-line-start': 421,
          'selection_end': 447,
          'selection_start': 447},
         1530358289.241957],
        [loc('../../../anaconda/lib/python2.7/site-packages/itchat/storage/messagequeue.py'),
         {'attrib-starts': [('Message',
                             14),
                            ('Message.__getitem__',
                             20)],
          'first-line': 5,
          'folded-linenos': [],
          'sel-line': 25,
          'sel-line-start': 709,
          'selection_end': 709,
          'selection_start': 709},
         1530358388.975732],
        [loc('../../Wechat/test.py'),
         {'attrib-starts': [('send_img',
                             33)],
          'first-line': 22,
          'folded-linenos': [],
          'sel-line': 35,
          'sel-line-start': 516,
          'selection_end': 524,
          'selection_start': 524},
         1530359839.154274],
        [loc('../../Wechat/test.py'),
         {'attrib-starts': [('send_img',
                             33)],
          'first-line': 22,
          'folded-linenos': [],
          'sel-line': 34,
          'sel-line-start': 507,
          'selection_end': 515,
          'selection_start': 515},
         1530359860.768252],
        [loc('../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         {'displayed-index': 27,
          'viewer-state': {'history': [-1,
                                       27],
                           'history-pos': 1,
                           'index': 27,
                           'top': 0}},
         1530359860.844844],
        [loc('../OADetection/MLOAD/main.py'),
         {'attrib-starts': [],
          'first-line': 556,
          'folded-linenos': [],
          'sel-line': 567,
          'sel-line-start': 20349,
          'selection_end': 20375,
          'selection_start': 20349},
         1530359860.879186],
        [loc('../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       27],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0}},
         1530359861.225655],
        [loc('../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         {'displayed-index': 27,
          'viewer-state': {'history': [-1,
                                       27],
                           'history-pos': 1,
                           'index': 27,
                           'top': 0}},
         1530359899.445643],
        [loc('main.py'),
         {'attrib-starts': [],
          'first-line': 11,
          'folded-linenos': [],
          'sel-line': 24,
          'sel-line-start': 287,
          'selection_end': 300,
          'selection_start': 300},
         1530360189.622573],
        [loc('command.py'),
         {'attrib-starts': [('Command',
                             26)],
          'first-line': 9,
          'folded-linenos': [],
          'sel-line': 31,
          'sel-line-start': 523,
          'selection_end': 527,
          'selection_start': 527},
         1530360257.867712],
        [loc('main.py'),
         {'attrib-starts': [('get_user_name',
                             35)],
          'first-line': 31,
          'folded-linenos': [],
          'sel-line': 51,
          'sel-line-start': 870,
          'selection_end': 886,
          'selection_start': 878},
         1530377798.595867],
        [loc('main.py'),
         {'attrib-starts': [('text_reply',
                             101)],
          'first-line': 105,
          'folded-linenos': [],
          'sel-line': 117,
          'sel-line-start': 2916,
          'selection_end': 2927,
          'selection_start': 2920},
         1530377857.461552]],
        20),
        'current-loc': loc('main.py'),
        'editor-state-list': [(loc('../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
                               {'displayed-index': 27,
                                'viewer-state': {'history': [-1,
        27],
        'history-pos': 1,
        'index': 27,
        'top': 0}}),
                              (loc('main.py'),
                               {'attrib-starts': [('text_reply',
        101)],
                                'first-line': 132,
                                'folded-linenos': [],
                                'sel-line': 128,
                                'sel-line-start': 3453,
                                'selection_end': 3453,
                                'selection_start': 3453}),
                              (loc('command.py'),
                               {'attrib-starts': [('Command',
        26)],
                                'first-line': 9,
                                'folded-linenos': [],
                                'sel-line': 31,
                                'sel-line-start': 523,
                                'selection_end': 527,
                                'selection_start': 527})],
        'has-focus': True,
        'locked': False},
        [loc('../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         loc('main.py'),
         loc('command.py')]),
                               'open_files': [u'../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx',
        u'command.py',
        u'main.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.157725321888412,
                           1: 0.5,
                           2: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (40,
                         26,
                         1267,
                         755)}]}
guimgr.recent-documents = [loc('main.py'),
                           loc('command.py')]
